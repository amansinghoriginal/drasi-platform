# PostgreSQL ConfigMap for Initialization
apiVersion: v1
kind: ConfigMap
metadata:
  name: mcp-test-db-init
  namespace: default
data:
  init.sql: |
    CREATE ROLE replication_group;
    CREATE ROLE replication_user REPLICATION LOGIN;
    GRANT replication_group TO testuser;
    GRANT replication_group TO replication_user;

    CREATE TABLE customers (
        customer_id VARCHAR(255) PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        email VARCHAR(255) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    CREATE TABLE orders (
        order_id VARCHAR(255) PRIMARY KEY,
        customer_id VARCHAR(255) NOT NULL,
        total DECIMAL(10, 2),
        status VARCHAR(50),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
    
    ALTER TABLE customers OWNER TO replication_group;
    ALTER TABLE orders OWNER TO replication_group;

    INSERT INTO customers (customer_id, name, email) VALUES
    ('C001', 'Initial Customer', 'initial@test.com');
    
    -- Create publications for the tables
    CREATE PUBLICATION customers_publication FOR TABLE customers;
    CREATE PUBLICATION orders_publication FOR TABLE orders;
    
    -- Create replication slots
    SELECT pg_create_logical_replication_slot('customers_slot', 'pgoutput');
    SELECT pg_create_logical_replication_slot('orders_slot', 'pgoutput');
---
# PostgreSQL Secret for Credentials
apiVersion: v1
kind: Secret
metadata:
  name: mcp-test-db-credentials
  namespace: default
type: Opaque
stringData:
  POSTGRES_USER: testuser
  POSTGRES_PASSWORD: testpassword
---
# PostgreSQL StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mcp-test-db
  namespace: default
spec:
  serviceName: mcp-test-db
  replicas: 1
  selector:
    matchLabels:
      app: mcp-test-db
  template:
    metadata:
      labels:
        app: mcp-test-db
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        envFrom:
        - secretRef:
            name: mcp-test-db-credentials
        env:
        - name: POSTGRES_DB
          value: testdb
        args:
        - -c
        - wal_level=logical
        - -c
        - max_replication_slots=5
        - -c
        - max_wal_senders=10
        volumeMounts:
        - name: mcp-db-data
          mountPath: /var/lib/postgresql/data
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "0.5"
            memory: "512Mi"
      volumes:
      - name: mcp-db-data
        emptyDir: {}
      - name: init-script
        configMap:
          name: mcp-test-db-init
---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: mcp-test-db
  namespace: default
spec:
  ports:
  - port: 5432
  selector:
    app: mcp-test-db
