# Build stage
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

# Copy solution and project files
COPY query-results-server.sln ./
COPY Drasi.Reactions.McpQueryResultsServer/Drasi.Reactions.McpQueryResultsServer.csproj ./Drasi.Reactions.McpQueryResultsServer/

# Restore dependencies
RUN dotnet restore "./Drasi.Reactions.McpQueryResultsServer/Drasi.Reactions.McpQueryResultsServer.csproj"

# Copy only the source code
COPY Drasi.Reactions.McpQueryResultsServer/ ./Drasi.Reactions.McpQueryResultsServer/

# Build the reaction project
WORKDIR /src/Drasi.Reactions.McpQueryResultsServer
RUN dotnet publish "./Drasi.Reactions.McpQueryResultsServer.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# Final stage/image
FROM ubuntu:25.04 AS final
RUN apt-get update && apt-get install -y bash curl dotnet-runtime-9.0 aspnetcore-runtime-9.0 && rm -rf /var/lib/apt/lists/*
WORKDIR /app
COPY --from=build /app/publish .

# Set log levels for reaction in debug environment
ENV Logging__LogLevel__Default="Debug"
ENV Logging__LogLevel__Microsoft="Information"
ENV Logging__LogLevel__Microsoft_Hosting_Lifetime="Information"
ENV Logging__LogLevel__Drasi_Reactions_McpQueryResultsServer="Debug"

# Expose both ports
EXPOSE 80
EXPOSE 8080

USER app
ENTRYPOINT ["dotnet", "Drasi.Reactions.McpQueryResultsServer.dll"]